{"version":3,"sources":["./node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.directive.js","./src/app/modules/orders/services/orders.service.ts","./node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.module.js","./node_modules/angular-datatables/__ivy_ngcc__/index.js"],"names":[],"mappings":"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","file":"default~modules-orders-orders-module~modules-reports-reports-module.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as Éµngcc0 from '@angular/core';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el, vcr, renderer) {\n        this.el = el;\n        this.vcr = vcr;\n        this.renderer = renderer;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        var self = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance && !x.ngTemplateRef; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                                // Filter columns using `ngTemplateRef`\n                                var colsWithTemplate = columns_1.filter(function (x) { return x.ngTemplateRef && !x.ngPipeInstance; });\n                                colsWithTemplate.forEach(function (el) {\n                                    var _a = el.ngTemplateRef, ref = _a.ref, context = _a.context;\n                                    // get <td> element which holds data using index\n                                    var index = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    var cellFromIndex = row.childNodes.item(index);\n                                    // render onto DOM\n                                    // finalize context to be sent to user\n                                    var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n                                        adtData: data\n                                    });\n                                    var instance = self.vcr.createEmbeddedView(ref, _context);\n                                    self.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ViewContainerRef },\n        { type: Renderer2 }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\nDataTableDirective.Éµfac = function DataTableDirective_Factory(t) { return new (t || DataTableDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ViewContainerRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2)); };\nDataTableDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({ type: DataTableDirective, selectors: [[\"\", \"datatable\", \"\"]], inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" } });\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(DataTableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[datatable]'\n            }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.ViewContainerRef }, { type: Éµngcc0.Renderer2 }]; }, { dtOptions: [{\n            type: Input\n        }], dtTrigger: [{\n            type: Input\n        }] }); })();\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n\n//# sourceMappingURL=angular-datatables.directive.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { API_URLS } from 'src/app/core/constants/api-urls.constants';\r\nimport { HttpBaseService } from 'src/app/core/services/http.service';\r\nimport { CounterSale } from '../models/counter-sale.model';\r\n\r\n@Injectable()\r\nexport class OrdersService {\r\n\r\n  constructor(\r\n    private baseService: HttpBaseService\r\n  ) {\r\n  }\r\n\r\n  getCounterSaleData(): Observable<any> {\r\n    return this.baseService.get(API_URLS.COUNTER_SALE_DATA);\r\n  }\r\n\r\n  getCompletedOrdersLoadsheets(date): Observable<any> {\r\n    return this.baseService.get(API_URLS.COMPLETED_ORDERS_LOAD_SHEETS + \"?date=\" + date);\r\n  }\r\n\r\n  getSchemes(): Observable<any> {\r\n    return this.baseService.get(API_URLS.GET_SCHEMES);\r\n  }\r\n\r\n  counterSaleOrder(order: CounterSale): Observable<any> {\r\n    const url = `${API_URLS.ADD_COUNTER_SALE}`;\r\n    return this.baseService.post(url, order);\r\n  }\r\n\r\n  getDiscountSlabs(): Observable<any> {\r\n    const url = `${API_URLS.GET_DISCOUNT_SLABS}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getDiscountSlabsByChannel(segementId: number, channelId: number): Observable<any> {\r\n    const url = `${API_URLS.GET_SLABS_BY_CHANNEL}/${segementId}/${channelId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  saveDispatchOrder(order: any): Observable<any> {\r\n    const url = API_URLS.CREATE_DISPATCH;\r\n    return this.baseService.post(url, order);\r\n  }\r\n\r\n  completeOrderDispatch(loadId: any): Observable<any> {\r\n    const url = `${API_URLS.COMPLETE_DISPATCH}/${loadId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  revertOrderDispatch(loadId: any): Observable<any> {\r\n    const url = `${API_URLS.REVERT_DISPATCH}/${loadId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  revertOrder(type: string, typeId: number): Observable<any> {\r\n    const url = `${API_URLS.REVERT_ORDER}/${type}/${typeId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  updateDispatchInvoiceDate(loadId: number, date: string): Observable<any> {\r\n    const url = `${API_URLS.UPDATE_INVOICE_DETAIL}/${loadId}`;\r\n    return this.baseService.post(url, { date });\r\n  }\r\n\r\n  getNewOrders(): Observable<any> {\r\n    const url = `${API_URLS.GET_NEW_ORDERS}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getSaleHistory(params = \"\"): Observable<any> {\r\n    const url = `${API_URLS.GET_SALE_HISTORY}?${params}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getSaleHistorySearchCriterias(): Observable<any> {\r\n    const url = `${API_URLS.GET_SALE_HISTORY_SEARCH_CRITERIA}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  assignSalesMan(saleman: any): Observable<any> {\r\n    const url = API_URLS.ASSIGN_SALESMAN;\r\n    return this.baseService.post(url, saleman);\r\n  }\r\n\r\n  getDispatchOrdersListing(): Observable<any> {\r\n    const url = `${API_URLS.DISPATCH_ORDER_LISTING}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getViewOrdersByEmployee(id: number, date: string): Observable<any> {\r\n    const url = `${API_URLS.VIEW_ORDERS}${id}/${date}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getDispatchDetailBySalemanAndDate(id: number, assignId: string, date: string): Observable<any> {\r\n    const url = `${API_URLS.DISPATCH_DETAIL}/${date}/${id}/${assignId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getViewOrderDetailById(orderid: number): Observable<any> {\r\n    const url = `${API_URLS.VIEW_ORDER_DETAIL}/${orderid}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getOrderDetails(orderId: number): Observable<any> {\r\n    const url = `${API_URLS.ORDER_DETAIL}/${orderId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getDispatchOrdersDetail(salemanId: number, date: string, assignId: string): Observable<any> {\r\n    const url = `${API_URLS.DISPATCH_ORDERS_DETAIL}/${salemanId}/${date}/${assignId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  saveDispatchQuantityOrder(order: any): Observable<any> {\r\n    const url = `${API_URLS.SAVE_DISPATCH}`;\r\n    return this.baseService.post(url, order);\r\n  }\r\n\r\n  saveExecutionQuantityOrder(order: any): Observable<any> {\r\n    const url = `${API_URLS.SAVE_EXECUTION}`;\r\n    return this.baseService.post(url, order);\r\n  }\r\n\r\n  saveSpotSaleOrder(order: any): Observable<any> {\r\n    const url = `${API_URLS.SAVE_SPOT}`;\r\n    return this.baseService.post(url, order);\r\n  }\r\n\r\n  cancelOrder(orderId: number): Observable<any> {\r\n    const url = `${API_URLS.CANCEL_ORDER}/${orderId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  canceleExecutionOrder(orderId: number): Observable<any> {\r\n    const url = `${API_URLS.CANCEL_EXECUTION_ORDER}/${orderId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  cancelSpotSaleOrder(orderId: number): Observable<any> {\r\n    const url = `${API_URLS.CANCEL_SPOT_SALE}/${orderId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getExecutionList(): Observable<any> {\r\n    const url = `${API_URLS.GET_EXECUTION_LIST}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  saveExecutionExpense(loadId: number, saleManId: number, date: string, expenses: Array<any>): Observable<any> {\r\n    const url = `${API_URLS.SAVE_EXPENSE}/${loadId}/${saleManId}/${date}`;\r\n    return this.baseService.post(url, { expenses });\r\n  }\r\n\r\n  checkBalance(retailerId: number): Observable<any> {\r\n    const url = `${API_URLS.CHECK_RETAILER_BALANCE}/${retailerId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getExectedOrdersListing(salemanId: number, date: string, loadId: number): Observable<any> {\r\n    const url = `${API_URLS.GET_EXECUTION_DETAILS}/${salemanId}/${date}/${loadId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  getExecutionFinalLoad(loadId: number, outOfRouteRecovery: Array<any>): Observable<any> {\r\n    const url = `${API_URLS.EXECUTION_FINAL_SAVE}/${loadId}`;\r\n    return this.baseService.post(url, { out_of_route_recovery: outOfRouteRecovery });\r\n  }\r\n\r\n  removeOutOfRuoteRecovery(paymentId: number): Observable<any> {\r\n    const url = `${API_URLS.REMOVE_OUT_OF_ROUE_RECOVERY}/${paymentId}`;\r\n    return this.baseService.get(url);\r\n  }\r\n\r\n  markCompeleteExecution(loadId: number, payload): Observable<any> {\r\n    const url = `${API_URLS.EXECUTION_COMPLETE}/${loadId}`;\r\n    return this.baseService.post(url, payload);\r\n  }\r\n\r\n}\r\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as Éµngcc0 from '@angular/core';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\nDataTablesModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: DataTablesModule });\nDataTablesModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({ factory: function DataTablesModule_Factory(t) { return new (t || DataTablesModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(DataTablesModule, { declarations: function () { return [DataTableDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DataTableDirective]; } }); })();\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(DataTablesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [DataTableDirective],\n                exports: [DataTableDirective]\n            }]\n    }], function () { return []; }, null); })();\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n\n//# sourceMappingURL=angular-datatables.module.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n\n//# sourceMappingURL=index.js.map"],"sourceRoot":"webpack:///"}